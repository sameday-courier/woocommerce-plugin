name: Auto Release with Optional Manual Tag & Safe Tag Check

on:
  push:
    branches:
      - master

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get latest Git tag
        id: get_latest_tag
        run: |
          latest=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.0.0")
          echo "tag=$latest" >> $GITHUB_OUTPUT

      - name: Read commit message
        id: get_commit
        run: |
          msg=$(git log -1 --pretty=%B)
          echo "message=$msg" >> $GITHUB_OUTPUT

      - name: Detect tag in commit message
        id: detect_tag
        run: |
          message="${{ steps.get_commit.outputs.message }}"
          if echo "$message" | grep -Eo "=v[0-9]+\.[0-9]+\.[0-9]+=" > /dev/null; then
            tag=$(echo "$message" | grep -Eo "=v[0-9]+\.[0-9]+\.[0-9]+=" | head -n1 | tr -d '=')
            echo "manual=true" >> $GITHUB_OUTPUT
            echo "tag=$tag" >> $GITHUB_OUTPUT
          else
            echo "manual=false" >> $GITHUB_OUTPUT
          fi

      - name: Bump patch if no manual tag
        id: bump_tag
        if: steps.detect_tag.outputs.manual == 'false'
        run: |
          version="${{ steps.get_latest_tag.outputs.tag#v }}"
          IFS='.' read -r major minor patch <<< "$version"
          patch=$((patch + 1))
          new_tag="v$major.$minor.$patch"
          echo "new_tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Set final tag value
        id: final_tag
        run: |
          if [ "${{ steps.detect_tag.outputs.manual }}" == "true" ]; then
            echo "tag=${{ steps.detect_tag.outputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ steps.bump_tag.outputs.new_tag }}" >> $GITHUB_OUTPUT
          fi

      - name: Check if tag already exists
        run: |
          tag_to_create="${{ steps.final_tag.outputs.tag }}"
          if git rev-parse "$tag_to_create" >/dev/null 2>&1; then
            echo "::error ::Tag $tag_to_create already exists. Aborting release."
            exit 1
          fi

      - name: Create Git tag
        run: |
          git tag ${{ steps.final_tag.outputs.tag }}
          git push origin ${{ steps.final_tag.outputs.tag }}

      - name: Create GitHub release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.final_tag.outputs.tag }}
          generate_release_notes: true
          body: |
            💬 **Commit message:**
            ${{ steps.get_commit.outputs.message }}

            ---

            📝 _Below are the release notes generated by GitHub:_
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
